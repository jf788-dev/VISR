services:
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto
    ports:
      - "1883:1883"
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf

  telegraf:
    image: telegraf:1.30
    container_name: telegraf
    depends_on:
      - mosquitto
      - influxdb
    volumes:
      - ./config/telegraf.conf:/etc/telegraf/telegraf.conf:ro

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpass
      - DOCKER_INFLUXDB_INIT_ORG=VISR
      - DOCKER_INFLUXDB_INIT_BUCKET=Data
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=visr-token

  datasets:
    image: nginx:alpine
    container_name: datasets
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - ./config/datasets:/usr/share/nginx/html:ro
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - filebrowser

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
    - "3000:3000"
    depends_on:
    - datasets
    environment:
    - GF_INSTALL_PLUGINS=volkovlabs-form-panel,marcusolsson-dynamictext-panel,yesoreyeram-infinity-datasource
    volumes:
    - grafana_data:/var/lib/grafana
    - ./config/grafana.ini:/etc/grafana/grafana.ini
    - ./config/provisioning/datasources:/etc/grafana/provisioning/datasources
    - ./config/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    - ./config/dashboards:/var/lib/grafana/dashboards

  postgres:
    image: postgres:17
    container_name: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgres/init:/docker-entrypoint-initdb.d:ro

  postgrest:
    image: postgrest/postgrest:latest
    container_name: postgrest
    depends_on:
      - postgres
    environment:
      PGRST_DB_URI: postgres://postgres:admin@postgres:5432/postgres
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_SERVER_HOST: 0.0.0.0
      PGRST_SERVER_PORT: 3001
      PGRST_SERVER_CORS_ALLOWED_ORIGINS: "*"
      PGRST_SERVER_CORS_ALLOW_HEADERS: "content-type, prefer, authorization"
    ports:
      - "3001:3001"

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres

  filebrowser_bootstrap:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser_bootstrap
    command: ["config","set","--auth.method=noauth","--database","/database/filebrowser.db"]
    volumes:
      - ./filebrowser/db:/database
    restart: "no"

  filebrowser:
    image: filebrowser/filebrowser:latest
    container_name: filebrowser
    depends_on:
      - filebrowser_bootstrap
    user: "1000:1000"
    ports:
      - "8095:80"
    command: ["--config","/config/settings.json"]
    volumes:
      - ./filebrowser/data:/srv                 # files to serve
      - ./filebrowser/db:/database              # persist the DB the bootstrap touched
      - ./filebrowser/config:/config            # holds settings.json
    restart: unless-stopped
  

volumes:
  influxdb_data:
  grafana_data:
  postgres_data: