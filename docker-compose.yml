services:
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto
    ports:
      - "1883:1883"
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf

  telegraf:
    image: telegraf:1.30
    container_name: telegraf
    depends_on:
      - mosquitto
      - influxdb
    volumes:
      - ./config/telegraf.conf:/etc/telegraf/telegraf.conf:ro

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpass
      - DOCKER_INFLUXDB_INIT_ORG=VISR
      - DOCKER_INFLUXDB_INIT_BUCKET=Data
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=visr-token

  datasets:
    image: nginx:alpine
    container_name: datasets
    ports:
      - "8081:80"
    volumes:
      - ./config/datasets:/usr/share/nginx/html:ro
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
    - "3000:3000"
    depends_on:
    - datasets
    environment:
    - GF_INSTALL_PLUGINS=volkovlabs-form-panel,marcusolsson-dynamictext-panel,yesoreyeram-infinity-datasource
    volumes:
    - grafana_data:/var/lib/grafana
    - ./config/grafana.ini:/etc/grafana/grafana.ini
    - ./config/provisioning/datasources:/etc/grafana/provisioning/datasources
    - ./config/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    - ./config/dashboards:/var/lib/grafana/dashboards

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data:/var/lib/postgresql
      - ./config/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres  

  visr_api:
    image: python:3.12
    container_name: visr_api
    working_dir: /app
    volumes:
      - ./services/visr_api:/app
    environment:
      DB_DSN: "dbname=postgres user=postgres password=admin host=postgres"
    command: sh -c "pip install --no-cache-dir -r requirements.txt && uvicorn app:app --host 0.0.0.0 --port 5000"
    depends_on:
      - postgres
    ports:
      - "5000:5000"

volumes:
  influxdb_data:
  grafana_data:
  postgres_data: